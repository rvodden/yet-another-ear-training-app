apply plugin: "com.dorongold.task-tree"

buildscript {

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
        google()
    }
    dependencies {
        classpath 'org.wisepersist:gwt-gradle-plugin:1.0.6'
        classpath 'com.android.tools.build:gradle:3.1.3'
        classpath 'com.mobidevelop.robovm:robovm-gradle-plugin:2.3.3'
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.17"
        classpath "gradle.plugin.com.dorongold.plugins:task-tree:1.3"
    }
}

allprojects {
    apply plugin: 'net.ltgt.apt'
    apply plugin: 'checkstyle'
    apply plugin: 'pmd'

    version = '1.0'
    ext {
        appName = "Yeata"
        gdxVersion = '1.9.8'
        roboVMVersion = '2.3.3'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.7.0'
        aiVersion = '1.8.0'
        tarsosDSPVersion = '2.4'
        jfugueVersion = '5.0.9'
        junitVersion = '5.2.0'
        androidVersion = '27.1.1'
        daggerVersion = '2.16'
        commonsCollectionsVersion = '4.2'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url 'https://jitpack.io' }
    }

    checkstyle {
        toolVersion "8.11"
        configFile rootProject.file('checkstyle.xml')
    }

}

project(":core") {
    apply plugin: "java"

    repositories {
        ivy {
            url "https://0110.be/"
            layout 'pattern', {
                artifact 'releases/TarsosDSP/TarsosDSP-[revision]/[module]-[revision]-bin.[ext]'
            }
        }
    }

    dependencies {
        compileOnly "com.github.axet:TarsosDSP:$tarsosDSPVersion@jar"
        compileOnly "com.google.dagger:dagger:$daggerVersion"
        compileOnly "com.github.JensPiegsa:jfugue:$jfugueVersion"
        annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"

        implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
        implementation "com.badlogicgames.ashley:ashley:$ashleyVersion"
        implementation "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        implementation "org.apache.commons:commons-collections4:$commonsCollectionsVersion"

        testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
        testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
        testRuntime "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"


    }
}

project(":desktop") {
    apply plugin: "java"

    dependencies {
        implementation project(":core")
        implementation "com.google.dagger:dagger:$daggerVersion"
        annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"

        implementation "com.github.axet:TarsosDSP:$tarsosDSPVersion@jar"
        implementation "com.github.JensPiegsa:jfugue:$jfugueVersion"
        implementation "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
    }
}


project(":android") {
    apply plugin: "android"

    repositories {
        google()
        jcenter()
        ivy {
            url "https://0110.be/"
            layout 'pattern', {
                artifact 'releases/TarsosDSP/TarsosDSP-[revision]/[module]-[revision]-bin.[ext]'
            }
        }
    }

    configurations { natives }

    dependencies {
        implementation project(":core")

        implementation "com.android.support:support-core-utils:${androidVersion}"
        implementation "com.android.support:animated-vector-drawable:${androidVersion}"
        implementation "com.android.support:appcompat-v7:${androidVersion}"
        implementation "com.google.dagger:dagger-android:$daggerVersion"
        implementation "com.google.dagger:dagger-android-support:$daggerVersion"
        implementation "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        implementation "com.badlogicgames.ashley:ashley:$ashleyVersion"
        implementation "TarsosDSP:TarsosDSP-Android:$tarsosDSPVersion@jar"

        annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
        annotationProcessor "com.google.dagger:dagger-android-processor:$daggerVersion"

        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"

        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-x86_64"
    }
}


project(":ios") {
    apply plugin: "java"
    apply plugin: "robovm"

    dependencies {
        implementation project(":core")
        implementation "com.mobidevelop.robovm:robovm-rt:$roboVMVersion"
        implementation "com.mobidevelop.robovm:robovm-cocoatouch:$roboVMVersion"
        implementation "com.badlogicgames.gdx:gdx-backend-robovm:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-ios"
        implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-ios"

    }
}

tasks.withType(Checkstyle) {
    description 'Check code standard'
    group 'verification'
    reports {
        xml.enabled true
        html.enabled false
    }
}

task pmd(type: Pmd) {
    description 'Identifying potential problems mainly dead code, duplicated code, cyclomatic complexity and overcomplicated expressions'
    group 'verification'
    ruleSetFiles = files("${project.rootDir}/rules-pmd.xml")

    reports {
        xml.enabled = true
        html.enabled = false
    }
}